1. cf image
2. "Cited" preuve ->
    match p = (n)-[:CITED]->(m) RETURN count(p) -> 28706
    match p = (n)-[:VENUE]->(m) RETURN count(p) -> 51956 
    match p = (n)-[:AUTHOR]->(m) RETURN count(p) -> 140575

Labele le plus présent est AUTHOR

3.
nombre moyen de d'articles publiés par auteur : match (n)-[q:AUTHOR]->(r) with r.name as g,count(n) as t return avg(t)
nombre max de publicationsl: match (n)-[q:AUTHOR]->(r) with r.name as g,count(n) as t return max(t)  

resultat -> 

4. 
l'auteur qui a publié le plus :
match (n)-[q:AUTHOR]->(r) 
with r.name as nam,count(n) as ct 
with apoc.agg.maxItems(nam,ct) as maxData 
RETURN maxData.items, maxData.value

réponse : Peter G. Neumann avec 89 ouvrages

5. 
année pendant laquelle le plus de publications ont été proposées :
match (n:Article) 
with n.year as date,count(n) as ct 
with apoc.agg.maxItems(date,ct) as maxdata 
return maxdata.items, maxdata.value

réponse : année 2006 avec 7536 publications

6. liste des publications de brian fitzgerarld
match (n)-[q:AUTHOR]->(r) where r.name = "Brian Fitzgerald" return n
(la suite je ne sais pas encore...)

7. repose sur 6

8. 
CALL gds.graph.create('graph2','Article',{ CITED: { orientation: 'UNDIRECTED'}})
CALL gds.pageRank.write('graph2', {writeProperty: 'pageRank'})

9. 
CALL gds.pageRank.stream('graph2') YIELD nodeId, score
RETURN gds.util.asNode(nodeId).name AS name, score
ORDER BY score DESC LIMIT 10

10. (pas bon pour l'instant)
CALL db.index.fulltext.queryNodes("articles", "open source") YIELD node RETURN [(author)<-[:AUTHOR]-(node) | author.name],size([(author)<-[:AUTHOR]-(node) | node.title]) LIMIT 10 